name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "pocket-bot"
  CONTAINER_NAME: "pocket"


  RELEASE_PATH: /home/tabularasa31/pocketbot
  PROD_REMOTE_HOST: ovz1.tabularasa31.pv29m.vps.myjino.ru
  PROD_USER: tabularasa31
  PROD_SERVER_SSH_KEY: ${{ secrets.PROD_SERVER_SSH_KEY }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to GitHub Container Registry
        run: echo $CR_PAT | docker login ghcr.io -u tabularasa31 --password-stdin

      - name: Push image to GitHub Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)



  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Jino via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            whoami
            
            # Login into GitHub Registry
            docker login $(echo $REGISTRY) -u tabularasa31 --password-stdin
            
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)
            
            # Set env variables
            export TOKEN=${{ secrets.TELEGRAM_TOKEN }}
            export CONSUMER_KEY=${{ secrets.POCKET_CONSUMER_KEY }}
            export AUTH_SERVER_URL=${{ secrets.AUTH_SERVER_URL }}
            
            # Run a new container from a new image
            docker run -e TOKEN -e CONSUMER_KEY -e AUTH_SERVER_URL -d \
            --restart always \
            --publish 80:80 \
            --name $(echo $CONTAINER_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)